openapi: 3.0.3
info:
  title: '@project.parent.artifactId@'
  version: '@project.version@'
servers:
  - url: '/ms-core/{{version}}'
tags:
  - name: External
    description: External Controller
  - name: Institution
    description: Institution Controller
  - name: Onboarding
    description: Onboarding Controller
paths:
  /external/institutions/{externalId}:
    get:
      tags:
        - External
      summary: The service retrieves the onboarded institution given its external id
      description: The service retrieves the onboarded institution given its external id
      operationId: getByExternalIdUsingGET
      parameters:
        - name: externalId
          in: path
          description: Institution's unique external identifier
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - bearerAuth:
            - global
  /external/institutions/{externalId}/products/{productId}/billing:
    get:
      tags:
        - External
      summary: The service returns the billing data related to the institution even if the current user is not related to the institution/onboardedProduct
      description: The service returns the billing data related to the institution even if the current user is not related to the institution/onboardedProduct
      operationId: getBillingInstitutionByExternalIdUsingGET
      parameters:
        - name: externalId
          in: path
          description: Institution's unique external identifier
          required: true
          style: simple
          schema:
            type: string
        - name: productId
          in: path
          description: Product's unique identifier
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionBillingResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - bearerAuth:
            - global
  /external/institutions/{externalId}/products/{productId}/manager:
    get:
      tags:
        - External
      summary: The service returns the manager related to the institution even if the current user is not related to the institution/onboardedProduct
      description: The service returns the manager related to the institution even if the current user is not related to the institution/onboardedProduct
      operationId: getManagerInstitutionByExternalIdUsingGET
      parameters:
        - name: externalId
          in: path
          description: Institution's unique external identifier
          required: true
          style: simple
          schema:
            type: string
        - name: productId
          in: path
          description: Product's unique identifier
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionManagerResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - bearerAuth:
            - global
  /institutions/insert/{externalId}:
    post:
      tags:
        - Institution
      summary: The service create an institution using external institution id without fetching data from party-registry or info-camere
      description: The service create an institution using external institution id without fetching data from party-registry or info-camere
      operationId: createInstitutionRawUsingPOST
      parameters:
        - name: externalId
          in: path
          description: Institution's unique external identifier
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstitutionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - bearerAuth:
            - global
  /institutions/pg:
    post:
      tags:
        - Institution
      summary: The service create an institution (PG) using external institution id fetching data from info-camere
      description: The service create an institution (PG) using external institution id fetching data from info-camere
      operationId: createPgInstitutionUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePgInstitutionRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - bearerAuth:
            - global
  /institutions/pn-pg:
    post:
      tags:
        - External
      summary: create an institution (PG) using external institution id fetching data from info-camere
      description: create an institution (PG) using external institution id fetching data from info-camere
      operationId: createPnPgInstitutionUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePnPgInstitutionRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionPnPgResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - bearerAuth:
            - global
  /institutions/{externalId}:
    post:
      tags:
        - Institution
      summary: The service create an institution (PA) using external institution id fetching data from party-registry
      description: The service create an institution (PA) using external institution id fetching data from party-registry
      operationId: createInstitutionByExternalIdUsingPOST
      parameters:
        - name: externalId
          in: path
          description: Institution's unique external identifier
          required: true
          style: simple
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - bearerAuth:
            - global
  /institutions/{id}/products:
    get:
      tags:
        - Institution
      summary: The service retrieves the insistitution's related products.
      description: The service retrieves the insistitution's related products.
      operationId: retrieveInstitutionProductsUsingGET
      parameters:
        - name: id
          in: path
          description: The internal identifier of the institution
          required: true
          style: simple
          schema:
            type: string
        - name: states
          in: query
          description: List of Relationship state for filter products
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardedProducts'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - bearerAuth:
            - global
  /onboarding/info:
    get:
      tags:
        - Onboarding
      summary: The service returns onboarding info related to logged user
      description: The service returns onboarding info related to logged user
      operationId: onboardingInfoUsingGET
      parameters:
        - name: institutionId
          in: query
          description: The internal identifier of the institution
          required: false
          style: form
          schema:
            type: string
        - name: institutionExternalId
          in: query
          description: Institution's unique external identifier
          required: false
          style: form
          schema:
            type: string
        - name: states
          in: query
          description: List of Relationship state for filter products
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OnboardingInfoResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - bearerAuth:
            - global
  /onboarding/institution:
    post:
      tags:
        - Onboarding
      summary: The service create a new Token (contract), and update institution and users data
      description: The service create a new Token (contract), and update institution and users data
      operationId: onboardingInstitutionUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingInstitutionRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - bearerAuth:
            - global
  /onboarding/institution/{externalId}/products/{productId}:
    head:
      tags:
        - Onboarding
      summary: The service verify if onboardedProduct is already onboarded for institution
      description: The service verify if onboardedProduct is already onboarded for institution
      operationId: verifyOnboardingInfoUsingHEAD
      parameters:
        - name: externalId
          in: path
          description: Institution's unique external identifier
          required: true
          style: simple
          schema:
            type: string
        - name: productId
          in: path
          description: Product's unique identifier
          required: true
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - bearerAuth:
            - global
components:
  schemas:
    CreatePnPgInstitutionRequest:
      title: CreatePnPgInstitutionRequest
      type: object
      properties:
        description:
          type: string
        taxId:
          type: string
    InstitutionPnPgResponse:
      title: InstitutionPnPgResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
    AttributesRequest:
      title: AttributesRequest
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        origin:
          type: string
    AttributesResponse:
      title: AttributesResponse
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        origin:
          type: string
    Billing:
      title: Billing
      type: object
      properties:
        publicServices:
          type: boolean
        recipientCode:
          type: string
        vatNumber:
          type: string
    BillingRequest:
      title: BillingRequest
      type: object
      properties:
        publicServices:
          type: boolean
        recipientCode:
          type: string
        vatNumber:
          type: string
    BillingResponse:
      title: BillingResponse
      type: object
      properties:
        publicServices:
          type: boolean
        recipientCode:
          type: string
        vatNumber:
          type: string
    ContractRequest:
      title: ContractRequest
      type: object
      properties:
        path:
          type: string
        version:
          type: string
    CreatePgInstitutionRequest:
      title: CreatePgInstitutionRequest
      type: object
      properties:
        description:
          type: string
        existsInRegistry:
          type: boolean
        taxId:
          type: string
      required:
        - taxId
        - existsInRegistry
    DataProtectionOfficer:
      title: DataProtectionOfficer
      type: object
      properties:
        address:
          type: string
        email:
          type: string
        pec:
          type: string
    DataProtectionOfficerRequest:
      title: DataProtectionOfficerRequest
      type: object
      properties:
        address:
          type: string
        email:
          type: string
        pec:
          type: string
    DataProtectionOfficerResponse:
      title: DataProtectionOfficerResponse
      type: object
      properties:
        address:
          type: string
        email:
          type: string
        pec:
          type: string
    GeoTaxonomies:
      title: GeoTaxonomies
      type: object
      properties:
        code:
          type: string
        desc:
          type: string
    InstitutionBillingResponse:
      title: InstitutionBillingResponse
      type: object
      properties:
        institutionId:
          type: string
          format: uuid
        externalId:
          type: string
        ipaCode:
          type: string
        description:
          type: string
        taxCode:
          type: string
        digitalAddress:
          type: string
        address:
          type: string
        zipCode:
          type: string
        institutionType:
          type: string
          description: institution type
          example: PA
        pricingPlan:
          type: string
          description: pricing plan
        billing:
          $ref: '#/components/schemas/BillingResponse'
      required:
        - institutionId
        - externalId
        - originId
        - origin
        - taxCode
        - description
        - digitalAddress
        - address
        - zipCode
        - billing
      additionalProperties: false
    InstitutionManagerResponse:
      title: InstitutionManagerResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
        from:
          type: string
          format: uuid
        to:
          type: string
          format: uuid
        role:
          $ref: '#/components/schemas/PartyRole'
        product:
          $ref: '#/components/schemas/ProductInfo'
        state:
          $ref: '#/components/schemas/RelationshipState'
        pricingPlan:
          type: string
          description: pricing plan
        institutionUpdate:
          $ref: '#/components/schemas/InstitutionUpdate'
        billing:
          $ref: '#/components/schemas/BillingResponse'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
      required:
        - id
        - from
        - to
        - role
        - product
        - state
        - createdAt
    InstitutionProduct:
      title: InstitutionProduct
      type: object
      properties:
        id:
          type: string
        state:
          $ref: '#/components/schemas/RelationshipState'
    InstitutionRequest:
      title: InstitutionRequest
      type: object
      properties:
        description:
          type: string
          example: AGENCY X
        digitalAddress:
          example: email@pec.mail.org
          format: email
          type: string
        address:
          example: via del campo
          type: string
        zipCode:
          example: 20100
          type: string
        taxCode:
          description: institution tax code
          type: string
        institutionType:
          type: string
          description: institution type
          example: PA
        attributes:
          $ref: '#/components/schemas/AttributesRequest'
        paymentServiceProvider:
          $ref: '#/components/schemas/PaymentServiceProviderRequest'
        dataProtectionOfficer:
          $ref: '#/components/schemas/DataProtectionOfficerRequest'
        geographicTaxonomies:
          type: array
          items:
            $ref: '#/components/schemas/GeoTaxonomies'
        rea:
          description: The institution REA
          type: string
        shareCapital:
          type: string
          description: The institution share capital value
          example: 10000
        businessRegisterPlace:
          type: string
          description: The business register place
          example: Rome
        supportEmail:
          type: string
          description: The support email contact
        supportPhone:
          type: string
          description: The support phone contact
      required:
        - description
        - digitalAddress
        - address
        - zipCode
        - taxCode
        - attributes
      additionalProperties: false
    InstitutionResponse:
      title: InstitutionResponse
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 97c0f418-bcb3-48d4-825a-fe8b29ae68e5
        externalId:
          description: external institution id
          example: 'c_f205'
          type: string
        originId:
          description: origin institution id (e.g iPA code)
          example: 'c_f205'
          type: string
        description:
          type: string
          example: AGENCY X
        digitalAddress:
          example: email@pec.mail.org
          format: email
          type: string
        address:
          example: via del campo
          type: string
        zipCode:
          example: 20100
          type: string
        taxCode:
          description: institution tax code
          type: string
        origin:
          type: string
          description: The origin form which the institution has been retrieved
          example: IPA
        institutionType:
          type: string
          description: institution type
          example: PA
        attributes:
          $ref: '#/components/schemas/AttributesResponse'
        paymentServiceProvider:
          $ref: '#/components/schemas/PaymentServiceProviderResponse'
        dataProtectionOfficer:
          $ref: '#/components/schemas/DataProtectionOfficerResponse'
        geographicTaxonomies:
          type: array
          items:
            $ref: '#/components/schemas/GeoTaxonomies'
        rea:
          description: The institution REA
          type: string
        shareCapital:
          type: string
          description: The institution share capital value
          example: 10000
        businessRegisterPlace:
          type: string
          description: The business register place
          example: Rome
        supportEmail:
          type: string
          description: The support email contact
        supportPhone:
          type: string
          description: The support phone contact
        imported:
          type: boolean
          description: True if institution is stored from batch api
      required:
        - id
        - externalId
        - originId
        - description
        - digitalAddress
        - address
        - zipCode
        - taxCode
        - attributes
        - origin
        - geographicTaxonomies
      additionalProperties: false
    InstitutionUpdate:
      title: InstitutionUpdate
      type: object
      properties:
        address:
          type: string
        businessRegisterPlace:
          type: string
        dataProtectionOfficer:
          $ref: '#/components/schemas/DataProtectionOfficer'
        description:
          type: string
        digitalAddress:
          type: string
        geographicTaxonomyCodes:
          type: array
          items:
            type: string
        imported:
          type: boolean
        institutionType:
          type: string
          enum:
            - GSP
            - PA
            - PG
            - PSP
            - PT
            - SCP
            - UNKNOWN
        paymentServiceProvider:
          $ref: '#/components/schemas/PaymentServiceProvider'
        rea:
          type: string
        shareCapital:
          type: string
        supportEmail:
          type: string
        supportPhone:
          type: string
        taxCode:
          type: string
        zipCode:
          type: string
    OnboardedInstitutionResponse:
      title: OnboardedInstitutionResponse
      properties:
        id:
          type: string
          format: uuid
        externalId:
          type: string
        originId:
          type: string
        description:
          type: string
        taxCode:
          type: string
        digitalAddress:
          type: string
        address:
          type: string
        zipCode:
          type: string
        state:
          $ref: '#/components/schemas/RelationshipState'
        role:
          $ref: '#/components/schemas/PartyRole'
        productInfo:
          $ref: '#/components/schemas/ProductInfo'
        institutionType:
          type: string
          description: institution type
          example: PA
        pricingPlan:
          type: string
          description: pricing plan
        billing:
          $ref: '#/components/schemas/Billing'
        origin:
          type: string
          description: The origin form which the institution has been retrieved
          example: IPA
        attributes:
          type: array
          description: certified attributes bound to this institution
          items:
            $ref: '#/components/schemas/AttributesResponse'
        geographicTaxonomies:
          type: array
          items:
            $ref: '#/components/schemas/GeoTaxonomies'
        paymentServiceProvider:
          $ref: '#/components/schemas/PaymentServiceProviderResponse'
        dataProtectionOfficer:
          $ref: '#/components/schemas/DataProtectionOfficerResponse'
      additionalProperties: false
      required:
        - id
        - externalId
        - originId
        - origin
        - taxCode
        - description
        - digitalAddress
        - address
        - zipCode
        - state
        - role
        - productInfo
        - attributes
        - geographicTaxonomies
    OnboardedProducts:
      title: OnboardedProducts
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/InstitutionProduct'
    OnboardingInfoResponse:
      title: OnboardingInfoResponse
      properties:
        userId:
          type: string
          description: User internal id
          format: uuid
        institutions:
          type: array
          items:
            $ref: '#/components/schemas/OnboardedInstitutionResponse'
      additionalProperties: false
      required:
        - userId
        - institutions
    OnboardingInstitutionRequest:
      title: OnboardingInstitutionRequest
      type: object
      properties:
        billing:
          $ref: '#/components/schemas/BillingRequest'
        contract:
          $ref: '#/components/schemas/ContractRequest'
        institutionExternalId:
          type: string
        institutionUpdate:
          $ref: '#/components/schemas/InstitutionUpdate'
        pricingPlan:
          type: string
        productId:
          type: string
        productName:
          type: string
        signContract:
          type: boolean
        users:
          type: array
          items:
            $ref: '#/components/schemas/Person'
    PaymentServiceProvider:
      title: PaymentServiceProvider
      type: object
      properties:
        abiCode:
          type: string
        businessRegisterNumber:
          type: string
        legalRegisterName:
          type: string
        legalRegisterNumber:
          type: string
        vatNumberGroup:
          type: boolean
    PaymentServiceProviderRequest:
      title: PaymentServiceProviderRequest
      type: object
      properties:
        abiCode:
          type: string
        businessRegisterNumber:
          type: string
        legalRegisterName:
          type: string
        legalRegisterNumber:
          type: string
        vatNumberGroup:
          type: boolean
    PaymentServiceProviderResponse:
      title: PaymentServiceProviderResponse
      type: object
      properties:
        abiCode:
          type: string
        businessRegisterNumber:
          type: string
        legalRegisterName:
          type: string
        legalRegisterNumber:
          type: string
        vatNumberGroup:
          type: boolean
    Person:
      title: Person
      type: object
      properties:
        email:
          type: string
        env:
          type: string
          enum:
            - COLL
            - DEV
            - PROD
            - ROOT
        id:
          type: string
        name:
          type: string
        productRole:
          type: array
          items:
            type: string
        role:
          type: string
          enum:
            - DELEGATE
            - MANAGER
            - OPERATOR
            - SUB_DELEGATE
        surname:
          type: string
        taxCode:
          type: string
    Problem:
      title: Problem
      type: object
      properties:
        detail:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProblemError'
        status:
          type: integer
          format: int32
        title:
          type: string
        type:
          type: string
    ProblemError:
      title: ProblemError
      type: object
    ProductInfo:
      title: ProductInfo
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: string
        roles:
          type: array
          items:
            type: string
    PartyRole:
      type: string
      description: Represents the generic available role types for the relationship
      enum:
        - MANAGER
        - DELEGATE
        - SUB_DELEGATE
        - OPERATOR
    RelationshipState:
      type: string
      description: Represents the party relationship state
      enum:
        - PENDING
        - ACTIVE
        - SUSPENDED
        - DELETED
        - REJECTED
        - TOBEVALIDATED
  securitySchemes:
    bearerAuth:
      type: http
      description: A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)
      scheme: bearer
      bearerFormat: JWT
